{"version":3,"file":"static/chunks/7729.a087a14c8d339450.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/instance/InstanceConfig.tsx","webpack://_N_E/../ui-core/src/instance/InstanceHealthPage.tsx","webpack://_N_E/../ui-core/src/settings/SettingsLayout.tsx","webpack://_N_E/../ui-core/src/instance/CodeLocationsPageDocsQuery.tsx","webpack://_N_E/../ui-core/src/instance/flattenCodeLocationRows.tsx","webpack://_N_E/../ui-core/src/instance/useCodeLocationPageFilters.tsx","webpack://_N_E/../ui-core/src/workspace/RepositoryCountTags.tsx","webpack://_N_E/../ui-core/src/workspace/VirtualizedCodeLocationRow.tsx","webpack://_N_E/../ui-core/src/workspace/RepositoryLocationsList.tsx","webpack://_N_E/../ui-core/src/instance/CodeLocationsPage.tsx","webpack://_N_E/../ui-core/src/settings/SettingsMainPane.tsx","webpack://_N_E/../ui-core/src/settings/SettingsTabs.tsx","webpack://_N_E/../ui-core/src/settings/SettingsRoot.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationMenu.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationRowSet.tsx"],"sourcesContent":["import 'codemirror/addon/search/searchcursor';\n\nimport {\n  Box,\n  Code,\n  Colors,\n  Heading,\n  PageHeader,\n  Spinner,\n  Subheading,\n} from '@dagster-io/ui-components';\nimport {StyledRawCodeMirror} from '@dagster-io/ui-components/editor';\nimport CodeMirror from 'codemirror';\nimport {memo, useContext, useMemo} from 'react';\nimport {createGlobalStyle} from 'styled-components';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {gql, useQuery} from '../apollo-client';\nimport {InstanceConfigQuery, InstanceConfigQueryVariables} from './types/InstanceConfig.types';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nconst InstanceConfigStyle = createGlobalStyle`\n  .CodeMirror.cm-s-instance-config.cm-s-instance-config {\n    background-color: ${Colors.backgroundDefault()};\n    box-shadow: 0 1px 0 ${Colors.keylineDefault()};\n    color: ${Colors.textDefault()};\n    height: 100%;\n\n    .config-highlight.config-highlight {\n      background-color: ${Colors.backgroundLimeHover()};\n    }\n  }\n`;\n\nexport const InstanceConfigContent = memo(() => {\n  useTrackPageView();\n  useDocumentTitle('Configuration');\n\n  const queryResult = useQuery<InstanceConfigQuery, InstanceConfigQueryVariables>(\n    INSTANCE_CONFIG_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {data} = queryResult;\n  const config = data?.instance.info;\n\n  const handlers = useMemo(() => {\n    return {\n      onReady: (editor: CodeMirror.Editor) => {\n        const documentHash = document.location.hash;\n        if (documentHash) {\n          const target = new RegExp(`^${documentHash.slice(1)}:`);\n          const cursor = editor.getSearchCursor(target);\n          const found = cursor.findNext();\n          if (found) {\n            editor.markText(cursor.from(), cursor.to(), {className: 'config-highlight'});\n            editor.scrollIntoView(cursor.from());\n          }\n        }\n      },\n    };\n  }, []);\n\n  if (!data) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <InstanceConfigStyle />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border=\"bottom\"\n        flex={{direction: 'row', alignItems: 'center', justifyContent: 'space-between'}}\n      >\n        <Subheading>\n          Dagster version: <Code style={{fontSize: '16px'}}>{data.version}</Code>\n        </Subheading>\n        <QueryRefreshCountdown refreshState={refreshState} />\n      </Box>\n      {/* Div wrapper on CodeMirror to allow entire page to scroll */}\n      <div style={{flex: 1, overflow: 'hidden'}}>\n        <StyledRawCodeMirror\n          value={config || ''}\n          options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n          handlers={handlers}\n          theme={['instance-config']}\n        />\n      </div>\n    </>\n  );\n});\n\nexport const InstanceConfigRoot = () => {\n  const {pageTitle} = useContext(InstancePageContext);\n  return (\n    <>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"config\" />} />\n      <InstanceConfigContent />\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceConfigRoot;\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      id\n      info\n    }\n  }\n`;\n","import {Box, Colors, Heading, PageHeader, Subheading} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\n\nimport {DaemonList} from './DaemonList';\nimport {INSTANCE_HEALTH_FRAGMENT} from './InstanceHealthFragment';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {gql, useQuery} from '../apollo-client';\nimport {InstanceHealthQuery, InstanceHealthQueryVariables} from './types/InstanceHealthPage.types';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nexport const InstanceHealthPageContent = () => {\n  useTrackPageView();\n  useDocumentTitle('Daemons');\n\n  const queryData = useQuery<InstanceHealthQuery, InstanceHealthQueryVariables>(\n    INSTANCE_HEALTH_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n  const refreshState = useQueryRefreshAtInterval(queryData, FIFTEEN_SECONDS);\n  const {loading, data} = queryData;\n\n  const daemonContent = () => {\n    if (loading && !data?.instance) {\n      return (\n        <Box padding={{horizontal: 24}} style={{color: Colors.textLight()}}>\n          Loading…\n        </Box>\n      );\n    }\n    return data?.instance ? (\n      <DaemonList daemonStatuses={data.instance.daemonHealth.allDaemonStatuses} />\n    ) : null;\n  };\n\n  return (\n    <div style={{overflowY: 'auto'}}>\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', alignItems: 'center', justifyContent: 'space-between'}}\n      >\n        <Subheading>Daemon statuses</Subheading>\n        <div>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </div>\n      </Box>\n      {daemonContent()}\n    </div>\n  );\n};\n\nexport const InstanceHealthPage = () => {\n  const {pageTitle} = useContext(InstancePageContext);\n  return (\n    <>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"health\" />} />\n      <InstanceHealthPageContent />\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceHealthPage;\n\nconst INSTANCE_HEALTH_QUERY = gql`\n  query InstanceHealthQuery {\n    instance {\n      id\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n","import {Box, PageHeader} from '@dagster-io/ui-components';\n\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\n\ninterface Props {\n  tabs: React.ReactNode;\n  main: React.ReactNode;\n}\n\nexport const SettingsLayout = ({tabs, main}: Props) => {\n  return (\n    <Box style={{height: '100%', overflow: 'hidden'}} flex={{direction: 'column'}}>\n      <PageHeader right={<ReloadAllButton label=\"Reload definitions\" />} tabs={tabs} />\n      <Box style={{overflow: 'hidden'}} flex={{direction: 'row', grow: 1}}>\n        {main}\n      </Box>\n    </Box>\n  );\n};\n","import {gql} from '../apollo-client';\n\nexport const CODE_LOCATION_PAGE_DOCS_QUERY = gql`\n  query CodeLocationPageDocsQuery {\n    repositoriesOrError {\n      ... on RepositoryConnection {\n        nodes {\n          ... on Repository {\n            id\n            name\n            location {\n              name\n              id\n            }\n            hasLocationDocs\n          }\n        }\n      }\n    }\n  }\n`;\n","import {CodeLocationRowStatusType} from '../workspace/CodeLocationRowStatusType';\nimport {CodeLocationRowType} from '../workspace/VirtualizedCodeLocationRow';\nimport {\n  LocationStatusEntryFragment,\n  WorkspaceLocationNodeFragment,\n} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\n\nconst flatten = (\n  locationStatuses: LocationStatusEntryFragment[],\n  locationEntries: WorkspaceLocationNodeFragment[],\n) => {\n  // Consider each loaded repository to be a \"code location\".\n  const all: CodeLocationRowType[] = [];\n\n  const entryMap = locationEntries.reduce(\n    (acc, entry) => {\n      acc[entry.name] = entry;\n      return acc;\n    },\n    {} as {[name: string]: WorkspaceLocationNodeFragment},\n  );\n\n  for (const locationStatus of locationStatuses) {\n    const locationEntry = entryMap[locationStatus.name];\n    let status: CodeLocationRowStatusType;\n\n    if (locationStatus.loadStatus === 'LOADING') {\n      status = CodeLocationRowStatusType.Updating;\n    } else if (locationEntry?.versionKey !== locationStatus.versionKey) {\n      status = CodeLocationRowStatusType.Loading;\n    } else if (locationEntry?.locationOrLoadError?.__typename === 'PythonError') {\n      status = CodeLocationRowStatusType.Failed;\n    } else {\n      status = CodeLocationRowStatusType.Loaded;\n    }\n\n    if (locationEntry?.locationOrLoadError?.__typename === 'RepositoryLocation') {\n      locationEntry.locationOrLoadError.repositories.forEach((repo) => {\n        all.push({\n          type: 'repository' as const,\n          locationStatus,\n          locationEntry,\n          repository: repo,\n          status,\n        });\n      });\n    } else {\n      all.push({\n        type: 'location' as const,\n        locationStatus,\n        locationEntry: locationEntry || null,\n        status,\n      });\n    }\n  }\n  return all;\n};\n\nconst filterRows = (\n  flattened: CodeLocationRowType[],\n  searchValue: string,\n  filters: CodeLocationFilters,\n) => {\n  const queryString = searchValue.toLocaleLowerCase();\n  return flattened.filter((row) => {\n    if (filters.status?.length) {\n      if (!filters.status.includes(row.status)) {\n        return false;\n      }\n    }\n    if (row.type !== 'repository') {\n      return row.locationStatus.name.toLocaleLowerCase().includes(queryString);\n    }\n    return (\n      row.locationStatus.name.toLocaleLowerCase().includes(queryString) ||\n      row.repository.name.toLocaleLowerCase().includes(queryString)\n    );\n  });\n};\n\nexport type CodeLocationFilters = {status: CodeLocationRowStatusType[]};\n\nexport const flattenCodeLocationRows = (\n  locationStatuses: LocationStatusEntryFragment[],\n  locationEntries: WorkspaceLocationNodeFragment[],\n  searchValue: string = '',\n  filters: CodeLocationFilters = {status: []},\n) => {\n  const flattened = flatten(locationStatuses, locationEntries);\n  const filtered = filterRows(flattened, searchValue, filters);\n\n  return {\n    flattened,\n    filtered,\n  };\n};\n","import React, {useCallback, useContext, useMemo, useState} from 'react';\nimport {useRecoilValue} from 'recoil';\n\nimport {CodeLocationFilters, flattenCodeLocationRows} from './flattenCodeLocationRows';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {TruncatedTextWithFullTextOnHover} from '../nav/getLeftNavItemsForOption';\nimport {codeLocationStatusAtom} from '../nav/useCodeLocationsStatus';\nimport {useFilters} from '../ui/BaseFilters';\nimport {useStaticSetFilter} from '../ui/BaseFilters/useStaticSetFilter';\nimport {CodeLocationRowStatusType} from '../workspace/CodeLocationRowStatusType';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\n\nconst STATUS_VALUES: Set<string> = new Set(Object.values(CodeLocationRowStatusType));\n\nexport const useCodeLocationPageFilters = () => {\n  const {loading, locationEntries} = useContext(WorkspaceContext);\n  const codeLocationStatusData = useRecoilValue(codeLocationStatusAtom);\n  const [searchValue, setSearchValue] = useState('');\n\n  const onChangeSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  }, []);\n\n  const queryString = searchValue.toLocaleLowerCase();\n\n  const [filters, setFilters] = useQueryPersistedState<CodeLocationFilters>({\n    encode: ({status}) => {\n      return {status: Array.isArray(status) ? status : undefined};\n    },\n    decode: (qs) => {\n      const status = Array.isArray(qs?.status) ? qs.status : [];\n      return {\n        status: status.filter(\n          (s) => typeof s === 'string' && STATUS_VALUES.has(s),\n        ) as CodeLocationRowStatusType[],\n      };\n    },\n  });\n\n  const {flattened, filtered} = useMemo(() => {\n    const codeLocationStatuses =\n      codeLocationStatusData?.locationStatusesOrError?.__typename ===\n      'WorkspaceLocationStatusEntries'\n        ? codeLocationStatusData.locationStatusesOrError.entries\n        : [];\n\n    return flattenCodeLocationRows(codeLocationStatuses, locationEntries, queryString, filters);\n  }, [locationEntries, queryString, filters, codeLocationStatusData]);\n\n  const statusFilter = useStaticSetFilter<CodeLocationRowStatusType>({\n    name: 'Status',\n    icon: 'tag',\n    allValues: useMemo(\n      () =>\n        Object.values(CodeLocationRowStatusType).map((value) => ({\n          key: value,\n          value,\n          match: [value],\n        })),\n      [],\n    ),\n    menuWidth: '300px',\n    renderLabel: ({value}) => {\n      return <TruncatedTextWithFullTextOnHover text={value} />;\n    },\n    getStringValue: (value) => value,\n    state: filters.status,\n    onStateChanged: (values) => {\n      setFilters({status: Array.from(values)});\n    },\n    matchType: 'all-of',\n    canSelectAll: false,\n    allowMultipleSelections: true,\n  });\n\n  const {button, activeFiltersJsx} = useFilters({filters: [statusFilter]});\n\n  return {\n    button,\n    activeFiltersJsx,\n    onChangeSearch,\n    loading,\n    flattened,\n    filtered,\n    searchValue,\n  };\n};\n","import {Box, Tag, Tooltip} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {DagsterRepoOption} from './WorkspaceContext/util';\nimport {RepoAddress} from './types';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\n\nexport const RepositoryCountTags = ({\n  repo,\n  repoAddress,\n}: {\n  repo: DagsterRepoOption['repository'];\n  repoAddress: RepoAddress;\n}) => {\n  const assetGroupCount = repo.assetGroups.length;\n  const jobCount = repo.pipelines.filter(({name}) => !isHiddenAssetGroupJob(name)).length;\n  const scheduleCount = repo.schedules.length;\n  const sensorCount = repo.sensors.length;\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n      <Tooltip\n        content={assetGroupCount === 1 ? '1 asset group' : `${assetGroupCount} asset groups`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/assets')}>\n          <Tag interactive icon=\"asset_group\">\n            {assetGroupCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={jobCount === 1 ? '1 job' : `${jobCount} jobs`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/jobs')}>\n          <Tag interactive icon=\"job\">\n            {jobCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip\n        content={scheduleCount === 1 ? '1 schedule' : `${scheduleCount} schedules`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/schedules')}>\n          <Tag interactive icon=\"schedule\">\n            {scheduleCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={sensorCount === 1 ? '1 sensor' : `${sensorCount} sensors`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/sensors')}>\n          <Tag interactive icon=\"sensors\">\n            {sensorCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n    </Box>\n  );\n};\n\nconst CountLink = styled(Link)`\n  :hover,\n  :active {\n    outline: none;\n    text-decoration: none;\n  }\n`;\n","import {Box, Colors, JoinedButtons, MiddleTruncate} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport {FeatureFlag} from 'shared/app/FeatureFlags.oss';\nimport styled from 'styled-components';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {ImageName, LocationStatus, ModuleOrPackageOrFile, ReloadButton} from './CodeLocationRowSet';\nimport {CodeLocationRowStatusType} from './CodeLocationRowStatusType';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext/WorkspaceContext';\nimport {\n  LocationStatusEntryFragment,\n  WorkspaceLocationNodeFragment,\n  WorkspaceRepositoryFragment,\n} from './WorkspaceContext/types/WorkspaceQueries.types';\nimport {DUNDER_REPO_NAME, buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {featureEnabled} from '../app/Flags';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {TimeFromNow} from '../ui/TimeFromNow';\nimport {HeaderCell, HeaderRow, RowCell} from '../ui/VirtualizedTable';\n\nexport type CodeLocationRowType =\n  | {\n      type: 'repository';\n      locationStatus: LocationStatusEntryFragment;\n      locationEntry: WorkspaceLocationNodeFragment;\n      repository: WorkspaceRepositoryFragment;\n      status: CodeLocationRowStatusType;\n    }\n  | {\n      type: 'location';\n      locationStatus: LocationStatusEntryFragment;\n      locationEntry: WorkspaceLocationNodeFragment | null;\n      status: CodeLocationRowStatusType;\n    };\n\nconst TEMPLATE_COLUMNS = featureEnabled(FeatureFlag.flagDocsInApp)\n  ? '3fr 1fr 1fr 160px 160px'\n  : '3fr 1fr 1fr 160px';\n\ninterface LocationRowProps {\n  locationEntry: WorkspaceRepositoryLocationNode | null;\n  locationStatus: LocationStatusEntryFragment;\n  hasDocs: boolean;\n  index: number;\n}\n\nexport const VirtualizedCodeLocationRow = React.forwardRef(\n  (props: LocationRowProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {locationEntry, locationStatus, hasDocs, index} = props;\n    const {name} = locationStatus;\n    const repoAddress = buildRepoAddress(DUNDER_REPO_NAME, name);\n\n    return (\n      <div ref={ref} data-index={index}>\n        <RowGrid border=\"bottom\">\n          <RowCell>\n            <Box flex={{direction: 'column', gap: 4}}>\n              <div style={{fontWeight: 500}}>\n                <Link to={workspacePathFromAddress(repoAddress)}>\n                  <MiddleTruncate text={name} />\n                </Link>\n              </div>\n            </Box>\n          </RowCell>\n          <RowCell>\n            <div>\n              <LocationStatus locationStatus={locationStatus} locationOrError={locationEntry} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <div style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationStatus.updateTimestamp} />\n            </div>\n          </RowCell>\n          {featureEnabled(FeatureFlag.flagDocsInApp) ? (\n            <RowCell>\n              {hasDocs ? (\n                <div>\n                  <AnchorButton to={workspacePathFromAddress(repoAddress, '/docs')}>\n                    View docs\n                  </AnchorButton>\n                </div>\n              ) : (\n                <span style={{color: Colors.textLighter()}}>None</span>\n              )}\n            </RowCell>\n          ) : null}\n          <RowCell>\n            <JoinedButtons>\n              <ReloadButton location={name} />\n              {locationEntry ? <CodeLocationMenu locationNode={locationEntry} /> : null}\n            </JoinedButtons>\n          </RowCell>\n        </RowGrid>\n      </div>\n    );\n  },\n);\n\ninterface RepoRowProps {\n  locationEntry: WorkspaceRepositoryLocationNode;\n  locationStatus: LocationStatusEntryFragment;\n  repository: WorkspaceRepositoryFragment;\n  hasDocs: boolean;\n  index: number;\n  // measure: (node: Element | null) => void;\n}\n\nexport const VirtualizedCodeLocationRepositoryRow = React.forwardRef(\n  (props: RepoRowProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {locationEntry, locationStatus, repository, hasDocs, index} = props;\n    const repoAddress = buildRepoAddress(repository.name, repository.location.name);\n\n    const allMetadata = [...locationEntry.displayMetadata, ...repository.displayMetadata];\n\n    return (\n      <div ref={ref} data-index={index}>\n        <RowGrid border=\"bottom\">\n          <RowCell>\n            <Box flex={{direction: 'column', gap: 4}}>\n              <div style={{fontWeight: 500}}>\n                <Link to={workspacePathFromAddress(repoAddress)}>\n                  <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n                </Link>\n              </div>\n              <ImageName metadata={allMetadata} />\n              <ModuleOrPackageOrFile metadata={allMetadata} />\n              <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n            </Box>\n          </RowCell>\n          <RowCell>\n            <div>\n              <LocationStatus locationStatus={locationStatus} locationOrError={locationEntry} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <div style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationStatus.updateTimestamp} />\n            </div>\n          </RowCell>\n          {featureEnabled(FeatureFlag.flagDocsInApp) ? (\n            <RowCell>\n              {hasDocs ? (\n                <div>\n                  <AnchorButton to={workspacePathFromAddress(repoAddress, '/docs')}>\n                    View docs\n                  </AnchorButton>\n                </div>\n              ) : (\n                <span style={{color: Colors.textLighter()}}>None</span>\n              )}\n            </RowCell>\n          ) : null}\n          <RowCell style={{alignItems: 'flex-end'}}>\n            <JoinedButtons>\n              <ReloadButton location={locationStatus.name} />\n              <CodeLocationMenu locationNode={locationEntry} />\n            </JoinedButtons>\n          </RowCell>\n        </RowGrid>\n      </div>\n    );\n  },\n);\n\nexport const VirtualizedCodeLocationHeader = () => {\n  return (\n    <HeaderRow templateColumns={TEMPLATE_COLUMNS} sticky>\n      <HeaderCell>Name</HeaderCell>\n      <HeaderCell>Status</HeaderCell>\n      <HeaderCell>Updated</HeaderCell>\n      {featureEnabled(FeatureFlag.flagDocsInApp) ? <HeaderCell>Docs</HeaderCell> : null}\n      <HeaderCell style={{textAlign: 'right'}}>Actions</HeaderCell>\n    </HeaderRow>\n  );\n};\n\nconst RowGrid = styled(Box)`\n  display: grid;\n  grid-template-columns: ${TEMPLATE_COLUMNS};\n`;\n","import {Box, NonIdealState, Row, Spinner} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {useRef} from 'react';\n\nimport {\n  CodeLocationRowType,\n  VirtualizedCodeLocationHeader,\n  VirtualizedCodeLocationRepositoryRow,\n  VirtualizedCodeLocationRow,\n} from './VirtualizedCodeLocationRow';\nimport {DUNDER_REPO_NAME} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {Container, Inner} from '../ui/VirtualizedTable';\n\ninterface Props {\n  loading: boolean;\n  codeLocations: CodeLocationRowType[];\n  searchValue: string;\n  isFilteredView: boolean;\n  locationsWithDocs: Set<string>;\n}\n\nexport const RepositoryLocationsList = ({\n  loading,\n  codeLocations,\n  searchValue,\n  isFilteredView,\n  locationsWithDocs,\n}: Props) => {\n  const parentRef = useRef<HTMLDivElement>(null);\n\n  const virtualizer = useVirtualizer({\n    count: codeLocations.length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: () => 64,\n    overscan: 10,\n  });\n\n  const totalHeight = virtualizer.getTotalSize();\n  const items = virtualizer.getVirtualItems();\n\n  if (loading && !codeLocations.length) {\n    return (\n      <Box flex={{gap: 8, alignItems: 'center'}} padding={{horizontal: 24}}>\n        <Spinner purpose=\"body-text\" />\n        <div>Loading…</div>\n      </Box>\n    );\n  }\n\n  if (!codeLocations.length) {\n    if (searchValue) {\n      return (\n        <Box padding={{vertical: 32}}>\n          <NonIdealState\n            icon=\"folder\"\n            title=\"No matching code locations\"\n            description={\n              <div>\n                No code locations were found for search query <strong>{searchValue}</strong>.\n              </div>\n            }\n          />\n        </Box>\n      );\n    }\n\n    if (isFilteredView) {\n      return (\n        <Box padding={{vertical: 32}}>\n          <NonIdealState\n            icon=\"folder\"\n            title=\"No matching code locations\"\n            description={<div>No code locations were found for these filter settings.</div>}\n          />\n        </Box>\n      );\n    }\n\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"folder\"\n          title=\"No code locations\"\n          description=\"When you add a code location, your definitions will appear here.\"\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Container ref={parentRef}>\n      <VirtualizedCodeLocationHeader />\n      <Inner $totalHeight={totalHeight}>\n        {items.map(({index, key, size, start}) => {\n          const row: CodeLocationRowType = codeLocations[index]!;\n          if (row.type === 'location') {\n            const repoAddressString = repoAddressAsHumanString({\n              location: row.locationStatus.name,\n              name: DUNDER_REPO_NAME,\n            });\n            const hasDocs = locationsWithDocs.has(repoAddressString);\n\n            return (\n              <Row $height={size} $start={start} key={key}>\n                <VirtualizedCodeLocationRow\n                  index={index}\n                  locationEntry={row.locationEntry}\n                  locationStatus={row.locationStatus}\n                  hasDocs={hasDocs}\n                  ref={virtualizer.measureElement}\n                />\n              </Row>\n            );\n          }\n\n          const repoAddressString = repoAddressAsHumanString({\n            location: row.locationStatus.name,\n            name: row.repository.name,\n          });\n          const hasDocs = locationsWithDocs.has(repoAddressString);\n\n          return (\n            <Row $height={size} $start={start} key={key}>\n              <VirtualizedCodeLocationRepositoryRow\n                index={index}\n                locationStatus={row.locationStatus}\n                locationEntry={row.locationEntry}\n                repository={row.repository}\n                hasDocs={hasDocs}\n                ref={virtualizer.measureElement}\n              />\n            </Row>\n          );\n        })}\n      </Inner>\n    </Container>\n  );\n};\n","import {Box, Heading, PageHeader, Subheading, TextInput} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {useMemo} from 'react';\n\nimport {useQuery} from '../apollo-client';\nimport {CODE_LOCATION_PAGE_DOCS_QUERY} from './CodeLocationsPageDocsQuery';\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {\n  CodeLocationPageDocsQuery,\n  CodeLocationPageDocsQueryVariables,\n} from './types/CodeLocationsPageDocsQuery.types';\nimport {useCodeLocationPageFilters} from './useCodeLocationPageFilters';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {RepositoryLocationsList} from '../workspace/RepositoryLocationsList';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\n\nconst SEARCH_THRESHOLD = 10;\n\nexport const CodeLocationsPageContent = () => {\n  useTrackPageView();\n  useDocumentTitle('Code locations');\n\n  const {activeFiltersJsx, flattened, button, loading, filtered, onChangeSearch, searchValue} =\n    useCodeLocationPageFilters();\n\n  const {data} = useQuery<CodeLocationPageDocsQuery, CodeLocationPageDocsQueryVariables>(\n    CODE_LOCATION_PAGE_DOCS_QUERY,\n  );\n\n  const locationsWithDocs: Set<string> = useMemo(() => {\n    if (!data || data.repositoriesOrError.__typename !== 'RepositoryConnection') {\n      return new Set();\n    }\n\n    const repos = data.repositoriesOrError.nodes.filter(\n      (repo) => repo.__typename === 'Repository' && repo.hasLocationDocs,\n    );\n\n    return new Set(\n      repos.map((repo) => {\n        const repoName = repo.name;\n        const locationName = repo.location.name;\n        return repoAddressAsHumanString({name: repoName, location: locationName});\n      }),\n    );\n  }, [data]);\n\n  const entryCount = flattened.length;\n  const showSearch = entryCount > SEARCH_THRESHOLD;\n\n  const subheadingText = () => {\n    if (loading || !entryCount) {\n      return 'Code locations';\n    }\n\n    return entryCount === 1 ? '1 code location' : `${entryCount} code locations`;\n  };\n\n  return (\n    <>\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n        style={{height: '64px'}}\n      >\n        <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n          {button}\n          {showSearch ? (\n            <TextInput\n              icon=\"search\"\n              value={searchValue}\n              onChange={onChangeSearch}\n              placeholder=\"Filter code locations by name…\"\n              style={{width: '400px'}}\n            />\n          ) : (\n            <Subheading id=\"repository-locations\">{subheadingText()}</Subheading>\n          )}\n        </Box>\n        <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n          {showSearch ? <div>{`${entryCount} code locations`}</div> : null}\n          <ReloadAllButton />\n        </Box>\n      </Box>\n      {activeFiltersJsx.length ? (\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 4}} padding={{horizontal: 24}}>\n          {activeFiltersJsx}\n        </Box>\n      ) : null}\n      <RepositoryLocationsList\n        loading={loading}\n        codeLocations={filtered}\n        locationsWithDocs={locationsWithDocs}\n        isFilteredView={!!activeFiltersJsx.length}\n        searchValue={searchValue}\n      />\n    </>\n  );\n};\n\nexport const CodeLocationsPage = () => {\n  const {pageTitle} = React.useContext(InstancePageContext);\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"locations\" />} />\n      <CodeLocationsPageContent />\n    </Box>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default CodeLocationsPage;\n","import {Box} from '@dagster-io/ui-components';\nimport {Redirect, Switch} from 'react-router-dom';\n\nimport {Route} from '../app/Route';\nimport {CodeLocationsPageContent} from '../instance/CodeLocationsPage';\nimport {InstanceConcurrencyPageContent} from '../instance/InstanceConcurrency';\nimport {InstanceConfigContent} from '../instance/InstanceConfig';\nimport {InstanceHealthPageContent} from '../instance/InstanceHealthPage';\n\nexport const SettingsMainPane = () => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'stretch'}} style={{flex: 1, overflow: 'hidden'}}>\n      <Switch>\n        <Route path=\"/deployment/locations\">\n          <CodeLocationsPageContent />\n        </Route>\n        <Route path=\"/deployment/daemons\">\n          <InstanceHealthPageContent />\n        </Route>\n        <Route path=\"/deployment/concurrency/:concurrencyKey?\">\n          <InstanceConcurrencyPageContent />\n        </Route>\n        <Route path=\"/deployment/config\">\n          <InstanceConfigContent />\n        </Route>\n        <Route path=\"*\" isNestingRoute>\n          <Redirect to=\"/deployment/locations\" />\n        </Route>\n      </Switch>\n    </Box>\n  );\n};\n","import {Tabs} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nimport {TabLink} from '../ui/TabLink';\n\nconst items = [\n  {\n    key: 'code-locations',\n    label: 'Code locations',\n    path: '/deployment/locations',\n  },\n  {\n    key: 'daemons',\n    label: 'Daemons',\n    path: '/deployment/daemons',\n  },\n  {\n    key: 'concurrency',\n    label: 'Concurrency',\n    path: '/deployment/concurrency',\n  },\n  {\n    key: 'config',\n    label: 'Configuration (read-only)',\n    path: '/deployment/config',\n  },\n];\n\nexport const SettingsTabs = () => {\n  const {pathname} = useLocation();\n  const selectedTabId = useMemo(() => {\n    const match = items.find((item) => pathname.startsWith(item.path));\n    return match?.key;\n  }, [pathname]);\n\n  return (\n    <Tabs selectedTabId={selectedTabId}>\n      {items.map((item) => (\n        <TabLink key={item.key} id={item.key} to={item.path} title={item.label} />\n      ))}\n    </Tabs>\n  );\n};\n","import {SettingsLayout} from './SettingsLayout';\nimport {SettingsMainPane} from './SettingsMainPane';\nimport {SettingsTabs} from './SettingsTabs';\n\nexport const SettingsRoot = () => {\n  return <SettingsLayout tabs={<SettingsTabs />} main={<SettingsMainPane />} />;\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default SettingsRoot;\n","import {\n  Button,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Popover,\n  Table,\n} from '@dagster-io/ui-components';\nimport {StyledRawCodeMirror} from '@dagster-io/ui-components/editor';\nimport {useMemo, useState} from 'react';\nimport * as yaml from 'yaml';\n\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext/WorkspaceContext';\n\nexport const CodeLocationMenu = ({\n  locationNode,\n}: {\n  locationNode: WorkspaceRepositoryLocationNode;\n}) => {\n  const [configIsOpen, setConfigIsOpen] = useState(false);\n  const [libsIsOpen, setLibsIsOpen] = useState(false);\n\n  let libsMenuItem = null;\n  let libsDialog = null;\n  if (\n    locationNode.locationOrLoadError?.__typename === 'RepositoryLocation' &&\n    locationNode.locationOrLoadError.dagsterLibraryVersions !== null\n  ) {\n    libsMenuItem = (\n      <MenuItem icon=\"info\" text=\"View Dagster libraries\" onClick={() => setLibsIsOpen(true)} />\n    );\n    libsDialog = (\n      <DagsterLibrariesDialog\n        libraries={locationNode.locationOrLoadError.dagsterLibraryVersions}\n        isOpen={libsIsOpen}\n        setIsOpen={setLibsIsOpen}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popover\n        position=\"bottom-left\"\n        content={\n          <Menu>\n            <MenuItem icon=\"info\" text=\"View configuration\" onClick={() => setConfigIsOpen(true)} />\n            {libsMenuItem}\n          </Menu>\n        }\n      >\n        <Button icon={<Icon name=\"expand_more\" />}></Button>\n      </Popover>\n      <CodeLocationConfigDialog\n        metadata={locationNode.displayMetadata}\n        isOpen={configIsOpen}\n        setIsOpen={setConfigIsOpen}\n      />\n      {libsDialog}\n    </>\n  );\n};\n\nexport const CodeLocationConfigDialog = ({\n  isOpen,\n  setIsOpen,\n  metadata,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  metadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  return (\n    <Dialog\n      title=\"Code location configuration\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <CodeLocationConfig displayMetadata={metadata} />\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport const DagsterLibrariesDialog = ({\n  isOpen,\n  setIsOpen,\n  libraries,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  libraries: {name: string; version: string}[];\n}) => {\n  return (\n    <Dialog\n      title=\"Dagster library versions\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <Table>\n        <thead>\n          <tr>\n            <th>Library</th>\n            <th>Version</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraries.map((library) => (\n            <tr key={library.name}>\n              <td>{library.name}</td>\n              <td>{library.version}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst CodeLocationConfig = ({\n  displayMetadata,\n}: {\n  displayMetadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  const yamlString = useMemo(() => {\n    const kvPairs = displayMetadata.reduce(\n      (accum, item) => {\n        accum[item.key] = item.value;\n        return accum;\n      },\n      {} as Record<string, string>,\n    );\n    return yaml.stringify(kvPairs);\n  }, [displayMetadata]);\n\n  return (\n    <StyledRawCodeMirror\n      value={yamlString}\n      options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n      theme={['config-editor']}\n    />\n  );\n};\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  CaptionMono,\n  Colors,\n  FontFamily,\n  Icon,\n  MiddleTruncate,\n  Tag,\n  Tooltip,\n  UnstyledButton,\n} from '@dagster-io/ui-components';\nimport {useCallback, useMemo, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext/WorkspaceContext';\nimport {useCopyToClipboard} from '../app/browser';\nimport {\n  NO_RELOAD_PERMISSION_TEXT,\n  ReloadRepositoryLocationButton,\n} from '../nav/ReloadRepositoryLocationButton';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\nimport {\n  LocationStatusEntryFragment,\n  WorkspaceDisplayMetadataFragment,\n} from './WorkspaceContext/types/WorkspaceQueries.types';\n\nexport const ImageName = ({metadata}: {metadata: WorkspaceDisplayMetadataFragment[]}) => {\n  const copy = useCopyToClipboard();\n  const [didCopy, setDidCopy] = useState(false);\n  const imageKV = metadata.find(({key}) => key === 'image');\n  const value = imageKV?.value || '';\n\n  const onClick = useCallback(async () => {\n    copy(value);\n    setDidCopy(true);\n    const timer = setTimeout(() => {\n      setDidCopy(false);\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [copy, value]);\n\n  if (imageKV) {\n    return (\n      <ImageNameBox>\n        <span style={{fontWeight: 500}}>image: </span>\n        <span style={{marginRight: '4px'}}>\n          <CaptionMono>{imageKV.value}</CaptionMono>\n        </span>\n        <Tooltip content={didCopy ? 'Copied!' : 'Click to copy image string'} placement=\"top\">\n          <UnstyledButton onClick={onClick}>\n            <Icon name={didCopy ? 'done' : 'copy'} size={12} />\n          </UnstyledButton>\n        </Tooltip>\n      </ImageNameBox>\n    );\n  }\n  return null;\n};\n\nconst ImageNameBox = styled(Box)`\n  width: 100%;\n  color: ${Colors.textLight()};\n  font-size: 12px;\n\n  .bp5-popover-target {\n    display: inline;\n    overflow: hidden;\n    position: relative;\n    top: 1px;\n  }\n`;\n\nexport const ModuleOrPackageOrFile = ({\n  metadata,\n}: {\n  metadata: WorkspaceDisplayMetadataFragment[];\n}) => {\n  const imageKV = metadata.find(\n    ({key}) => key === 'module_name' || key === 'package_name' || key === 'python_file',\n  );\n  if (imageKV) {\n    return (\n      <Box\n        flex={{direction: 'row', gap: 4}}\n        style={{width: '100%', color: Colors.textLight(), fontSize: 12}}\n      >\n        <span style={{fontWeight: 500}}>{imageKV.key}:</span>\n        <div style={MetadataValueButtonStyle}>\n          <MiddleTruncate text={imageKV.value} />\n        </div>\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport const LocationStatus = (props: {\n  locationStatus: LocationStatusEntryFragment | null;\n  locationOrError: WorkspaceRepositoryLocationNode | null;\n}) => {\n  const {locationStatus, locationOrError} = props;\n  const [showDialog, setShowDialog] = useState(false);\n\n  const reloadFn = useMemo(\n    () => buildReloadFnForLocation(locationStatus?.name || ''),\n    [locationStatus?.name],\n  );\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationStatus?.loadStatus === 'LOADING') {\n    return (\n      <Tag minimal intent=\"primary\">\n        Updating…\n      </Tag>\n    );\n  }\n\n  if (locationOrError?.versionKey !== locationStatus?.versionKey) {\n    return (\n      <Tag minimal intent=\"primary\">\n        Loading…\n      </Tag>\n    );\n  }\n\n  if (locationStatus && locationOrError?.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <Box flex={{alignItems: 'center', gap: 12}}>\n          <Tag minimal intent=\"danger\">\n            Failed\n          </Tag>\n          <ButtonLink onClick={() => setShowDialog(true)}>\n            <span style={{fontSize: '12px'}}>View error</span>\n          </ButtonLink>\n        </Box>\n        <RepositoryLocationNonBlockingErrorDialog\n          location={locationStatus.name}\n          isOpen={showDialog}\n          error={locationOrError.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tag minimal intent=\"success\">\n      Loaded\n    </Tag>\n  );\n};\n\nexport const ReloadButton = ({location}: {location: string}) => {\n  return (\n    <ReloadRepositoryLocationButton\n      location={location}\n      ChildComponent={({reloading, tryReload, hasReloadPermission}) => {\n        return (\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <Tooltip\n              content={hasReloadPermission ? '' : NO_RELOAD_PERMISSION_TEXT}\n              canShow={!hasReloadPermission}\n              useDisabledButtonTooltipFix\n            >\n              <Button\n                icon={<Icon name=\"code_location_reload\" />}\n                disabled={!hasReloadPermission}\n                loading={reloading}\n                onClick={() => tryReload()}\n              >\n                Reload\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }}\n    />\n  );\n};\n\nconst MetadataValueButtonStyle = {\n  width: '100%',\n  display: 'block',\n  fontFamily: FontFamily.monospace,\n  fontSize: '12px',\n  color: Colors.textLight(),\n};\n"],"names":["InstanceConfigStyle","createGlobalStyle","Colors","InstanceConfigContent","memo","useTrackPageView","useDocumentTitle","queryResult","useQuery","INSTANCE_CONFIG_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","data","config","instance","info","handlers","useMemo","onReady","documentHash","document","location","hash","target","RegExp","concat","slice","cursor","editor","getSearchCursor","findNext","markText","from","to","className","scrollIntoView","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","Fragment","jsx","Box","padding","vertical","horizontal","border","flex","direction","alignItems","justifyContent","Subheading","Code","style","fontSize","version","QueryRefreshCountdown","div","overflow","StyledRawCodeMirror","value","options","readOnly","lineNumbers","mode","theme","Spinner","purpose","InstanceConfigRoot","pageTitle","useContext","InstancePageContext","PageHeader","title","Heading","tabs","InstanceTabs","tab","__webpack_exports__","gql","InstanceHealthPageContent","queryData","INSTANCE_HEALTH_QUERY","loading","overflowY","DaemonList","daemonStatuses","daemonHealth","allDaemonStatuses","color","InstanceHealthPage","INSTANCE_HEALTH_FRAGMENT","SettingsLayout","main","param","jsx_runtime","height","right","ReloadAllButton","label","grow","CODE_LOCATION_PAGE_DOCS_QUERY","flatten","locationStatuses","locationEntries","all","entryMap","reduce","acc","entry","name","locationStatus","locationEntry","status","loadStatus","CodeLocationRowStatusType","Updating","versionKey","Loading","locationOrLoadError","__typename","Failed","Loaded","repositories","forEach","push","type","repository","repo","filterRows","flattened","searchValue","filters","queryString","toLocaleLowerCase","filter","length","includes","row","flattenCodeLocationRows","filtered","STATUS_VALUES","Set","Object","values","useCodeLocationPageFilters","WorkspaceContext","codeLocationStatusData","useRecoilValue","codeLocationStatusAtom","setSearchValue","useState","onChangeSearch","useCallback","e","setFilters","useQueryPersistedState","encode","Array","isArray","undefined","decode","qs","s","has","locationStatusesOrError","entries","statusFilter","useStaticSetFilter","icon","allValues","map","key","match","menuWidth","renderLabel","TruncatedTextWithFullTextOnHover","text","getStringValue","state","onStateChanged","matchType","canSelectAll","allowMultipleSelections","button","activeFiltersJsx","useFilters","RepositoryCountTags","repoAddress","assetGroupCount","assetGroups","jobCount","pipelines","isHiddenAssetGroupJob","scheduleCount","schedules","sensorCount","sensors","gap","Tooltip","content","placement","CountLink","workspacePathFromAddress","Tag","interactive","styled","Link","TEMPLATE_COLUMNS","featureEnabled","FeatureFlag","flagDocsInApp","VirtualizedCodeLocationRow","React","props","ref","hasDocs","index","buildRepoAddress","DUNDER_REPO_NAME","data-index","RowGrid","RowCell","fontWeight","MiddleTruncate","LocationStatus","locationOrError","whiteSpace","TimeFromNow","unixTimestamp","updateTimestamp","AnchorButton","span","JoinedButtons","ReloadButton","CodeLocationMenu","locationNode","VirtualizedCodeLocationRepositoryRow","allMetadata","displayMetadata","repoAddressAsHumanString","ImageName","metadata","ModuleOrPackageOrFile","VirtualizedCodeLocationHeader","HeaderRow","templateColumns","sticky","HeaderCell","textAlign","RepositoryLocationsList","codeLocations","isFilteredView","locationsWithDocs","parentRef","useRef","virtualizer","useVirtualizer","count","getScrollElement","current","estimateSize","overscan","totalHeight","getTotalSize","items","getVirtualItems","Container","Inner","$totalHeight","size","start","repoAddressString","Row","$height","$start","measureElement","NonIdealState","description","strong","CodeLocationsPageContent","repositoriesOrError","repos","nodes","hasLocationDocs","repoName","locationName","entryCount","showSearch","TextInput","onChange","placeholder","width","id","SettingsMainPane","Switch","Route","path","InstanceConcurrencyPageContent","isNestingRoute","Redirect","SettingsTabs","pathname","useLocation","selectedTabId","find","startsWith","item","Tabs","TabLink","SettingsRoot","settings_SettingsRoot","configIsOpen","setConfigIsOpen","libsIsOpen","setLibsIsOpen","libsMenuItem","libsDialog","dagsterLibraryVersions","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","MenuItem","onClick","DagsterLibrariesDialog","libraries","isOpen","setIsOpen","Popover","position","Menu","Button","Icon","CodeLocationConfigDialog","Dialog","onClose","CodeLocationConfig","DialogFooter","topBorder","intent","Table","thead","tr","th","tbody","td","library","yamlString","kvPairs","accum","yaml","copy","useCopyToClipboard","didCopy","setDidCopy","imageKV","timer","setTimeout","clearTimeout","ImageNameBox","marginRight","CaptionMono","UnstyledButton","MetadataValueButtonStyle","showDialog","setShowDialog","reloadFn","buildReloadFnForLocation","reloading","tryReload","useRepositoryLocationReload","scope","minimal","ButtonLink","RepositoryLocationNonBlockingErrorDialog","error","onDismiss","onTryReload","ReloadRepositoryLocationButton","ChildComponent","hasReloadPermission","NO_RELOAD_PERMISSION_TEXT","canShow","useDisabledButtonTooltipFix","disabled","display","fontFamily","FontFamily","monospace"],"sourceRoot":""}